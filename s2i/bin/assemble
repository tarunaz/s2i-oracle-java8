#!/bin/bash -e
#
# S2I assemble script for the 's2i-java8-maven' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#   https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
  exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
echo "---> Restoring build artifacts..."
if [ "$(ls -A /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring found build artifacts..."
  cp -Rf /tmp/artifacts/. ./
fi

echo "---> Installing application source..."
cp -Rf /tmp/src/. ./
mkdir $HOME/webapps

echo "Determining builder"
# If a build.gradle is present, this is a normal build scenario so run gradle.
if [ -f "build.gradle" ]; then
  echo "Found build.gradle"
  BUILDER=gradle
  BUILD_ARGS=${GRADLE_ARGS:-${BUILD_ARGS:-"build"}}
  ARTIFACT_DIR=${ARTIFACT_DIR:-build/libs}
  if [ -f "gradlew" ]; then
    echo "---> Building application with wrapper..."
    BUILDER="./gradlew"
  fi
fi
# If a pom.xml is present, this is a normal build scenario so run maven.
if [ -f "pom.xml" ]; then
  echo "Found pom.xml"
  # the subdirectory within LOCAL_SOURCE_DIR from where we should copy build
  # artifacts (*.war, *.jar)
  BUILDER=mvn
  BUILD_ARGS=${MAVEN_ARGS:-${BUILD_ARGS:-"install"}}
  ARTIFACT_DIR=${ARTIFACT_DIR:-target}
  if [ -f "mvnw" ]; then
    echo "---> Building application with wrapper..."
    BUILDER="./mvnw"
  fi
fi

if [ -z "$WAR_FILE_URL" ]; then
  echo "No WAR_FILE_URL environment variable found"
else
  echo "Found WAR_FILE_URL environment variable for downloading artifact!"
  #echo "Executing curl -u $WAR_FILE_USER:$WAR_FILE_PASSWORD -o $HOME/webapps/ROOT.war -O $WAR_FILE_URL"
  echo "Executing curl -O $WAR_FILE_URL"
  #curl -o $HOME/webapps/ses_master_Jan032018.0.tar -O $WAR_FILE_URL
  ARTIFACT_DIR=${ARTIFACT_DIR}
  cd $HOME/$ARTIFACT_DIR
  curl -O $WAR_FILE_URL
  pwd
  ls -ltr
  
fi

if [ -z "$BUILDER" ]; then
  echo "---> Could not determine builder (gradle or maven)"
#  exit 1
fi

#echo "---> Building application from source..."
#BUILD_ARGS=${BUILD_ARGS:-"install"}
#echo "--> # BUILDER = $BUILDER"
#echo "--> # BUILD_ARGS = $BUILD_ARGS"

#echo "---> Building application with..."
#echo "--------> $BUILDER $BUILD_ARGS"
#$BUILDER $BUILD_ARGS

echo "find artifact DIR value"

cd $HOME/$ARTIFACT_DIR
ls -ltr
pwd
tar -xvf *.tar
echo "---> Rename artifact $(find $ARTIFACT_DIR -name *.jar)"
#result_file=$(find $ARTIFACT_DIR -name *.jar)
#if [ -z "$result_file" ]; then
#  echo "---> Build file could not be found"
#  exit 1
#fi

#mv $result_file app.jar
